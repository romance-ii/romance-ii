package math{	public class Vect {		public var x:Number=0;		public var y:Number=0;		public var mag:Number=0;		public function Vect(nX:Number,nY:Number):void {			set(nX,nY);		}		public function set(nX:Number,nY:Number):void {			x=nX;			y=nY;			mag=Math.sqrt(x*x+y*y);		}		public function add(addX:Number,addY:Number):void {			x+=addX;			y+=addY;			mag=Math.sqrt(x*x+y*y);		}		public function mult(k:Number):void {			x*=k;			y*=k;			mag*=k;		}		public function proj(o:Vect):void {			mag = (o.x*x+o.y*y)/o.mag;			x = mag*(o.x/o.mag);			y = mag*(o.y/o.mag);			mag = Math.abs(mag);		}		public function setMag(k:Number):void {			x*=k/mag;			y*=k/mag;			mag=k;		}		public function rotate(r:Number):void{			setRotation( getRotation()*(180/Math.PI) + r );		}		public function setRotation(r:Number):void{			r*=(Math.PI/180);			x = Math.cos(r)*mag;			y = Math.sin(r)*mag;		}		public function getRotation():Number{			return Math.atan2(y,x);		}	}}