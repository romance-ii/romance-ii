package math{	public class UVect extends Vect {		public var ux:Number = 0;		public var uy:Number = 0;		public function UVect(nX:Number,nY:Number):void{			super(nX,nY);		}		override public function set(nX:Number,nY:Number):void {			super.set(nX,nY);			setU();		}		override public function add(addX:Number,addY:Number):void {			super.add(addX,addY);			setU();		}		override public function proj(o:Vect):void {			super.proj(o);			setU();		}		private function setU():void {			if(mag>0){				ux=x/mag;				uy=y/mag;			}else{				ux=uy=0;			}		}		public function proj2(ox:Number,oy:Number):Number {			return ( ox*ux+oy*uy );		}		public function norm(ox:Number,oy:Number):Number {			return ( Math.abs( oy*ux-ox*uy ) );		}	}}